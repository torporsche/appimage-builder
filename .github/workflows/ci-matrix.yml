name: CI Matrix - Configuration Testing

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        qt: [qt5, qt6]
        msa: [on, off]
      fail-fast: false
    
    name: "Test ${{ matrix.qt }} / MSA ${{ matrix.msa }}"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install base dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          curl \
          wget \
          file \
          ninja-build \
          clang \
          lld \
          pkg-config \
          libc6-dev \
          libssl-dev \
          libcurl4-openssl-dev \
          zlib1g-dev \
          libpng-dev \
          libuv1-dev \
          libzip-dev \
          libglib2.0-dev \
          libgl1-mesa-dev \
          libegl1-mesa-dev \
          libgles2-mesa-dev \
          libx11-dev \
          libxext-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxi-dev \
          libxrandr-dev \
          libxtst6 \
          libxss1 \
          libasound2-dev \
          libpulse-dev \
          libudev-dev \
          libevdev-dev \
          libnss3-dev \
          libprotobuf-dev \
          protobuf-compiler

    - name: Install Qt5 dependencies
      if: matrix.qt == 'qt5'
      run: |
        sudo apt-get install -y \
          qtbase5-dev \
          qtbase5-dev-tools \
          qt5-qmake \
          libqt5svg5-dev \
          qtwebengine5-dev \
          libqt5webenginewidgets5 \
          qtdeclarative5-dev \
          qml-module-qtquick-controls \
          qml-module-qtquick-controls2 \
          qml-module-qtquick-layouts \
          qml-module-qtquick-window2 \
          qml-module-qtquick-dialogs \
          qml-module-qtwebengine \
          libqt5opengl5-dev

    - name: Install Qt6 dependencies  
      if: matrix.qt == 'qt6'
      run: |
        sudo apt-get install -y \
          qt6-base-dev \
          qt6-base-dev-tools \
          qt6-tools-dev \
          qt6-tools-dev-tools \
          qmake6 \
          libqt6svg6-dev \
          qt6-webengine-dev \
          qt6-webengine-dev-tools \
          libqt6webenginecore6 \
          libqt6webenginewidgets6 \
          qt6-declarative-dev \
          qml6-module-qtquick-controls \
          qml6-module-qtquick-layouts \
          qml6-module-qtquick-window \
          qml6-module-qtquick-dialogs \
          qml6-module-qtwebengine \
          qt6-wayland \
          qt6-wayland-dev \
          libqt6opengl6-dev

    - name: Setup environment
      run: |
        echo "MAKE_JOBS=$(nproc)" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        if [ "${{ matrix.qt }}" = "qt6" ]; then
          echo "QT_VERSION=6" >> $GITHUB_ENV
          echo "CMAKE_QT_VERSION=Qt6" >> $GITHUB_ENV
        else
          echo "QT_VERSION=5" >> $GITHUB_ENV  
          echo "CMAKE_QT_VERSION=Qt5" >> $GITHUB_ENV
        fi
        echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV

    - name: Validate commit pins
      run: |
        ./tests/test-commit-pins.sh

    - name: Test CMake configuration (Qt5, MSA on)
      if: matrix.qt == 'qt5' && matrix.msa == 'on'
      run: |
        DRY_RUN_CONFIGURE=1 ./build_appimage.sh -t x86_64 -n -j ${MAKE_JOBS} -q quirks-qt5.sh

    - name: Test CMake configuration (Qt5, MSA off)
      if: matrix.qt == 'qt5' && matrix.msa == 'off'
      run: |
        DRY_RUN_CONFIGURE=1 ./build_appimage.sh -t x86_64 -n -m -j ${MAKE_JOBS} -q quirks-qt5.sh

    - name: Test CMake configuration (Qt6, MSA on)
      if: matrix.qt == 'qt6' && matrix.msa == 'on'
      run: |
        DRY_RUN_CONFIGURE=1 ./build_appimage.sh -t x86_64 -n -o -j ${MAKE_JOBS} -q quirks-qt6.sh

    - name: Test CMake configuration (Qt6, MSA off)
      if: matrix.qt == 'qt6' && matrix.msa == 'off'
      run: |
        DRY_RUN_CONFIGURE=1 ./build_appimage.sh -t x86_64 -n -o -m -j ${MAKE_JOBS} -q quirks-qt6.sh

    - name: Verify build directories exist
      run: |
        echo "=== Build directories created ==="
        ls -la build/ || echo "No build directory created"
        
        echo "=== Source directories created ==="
        ls -la source/ || echo "No source directory created"
        
        echo "=== Verify CMake configuration worked ==="
        if [ -d "build/mcpelauncher" ]; then
          echo "✅ mcpelauncher configured"
          ls -la build/mcpelauncher/CMakeCache.txt || echo "❌ No CMakeCache.txt"
        fi
        
        if [ -d "build/mcpelauncher-ui" ]; then
          echo "✅ mcpelauncher-ui configured"  
          ls -la build/mcpelauncher-ui/CMakeCache.txt || echo "❌ No CMakeCache.txt"
        fi
        
        if [ -d "build/msa" ] && [ "${{ matrix.msa }}" = "on" ]; then
          echo "✅ msa configured (expected for MSA on)"
          ls -la build/msa/CMakeCache.txt || echo "❌ No CMakeCache.txt"
        elif [ ! -d "build/msa" ] && [ "${{ matrix.msa }}" = "off" ]; then
          echo "✅ msa not configured (expected for MSA off)"
        fi