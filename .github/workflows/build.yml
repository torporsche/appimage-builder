name: Build AppImage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-x86_64:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install base build dependencies
      run: |
        sudo apt-get update
        # Install core build tools first
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          curl \
          wget \
          file \
          ninja-build \
          clang \
          lld \
          pkg-config

    - name: Install core libraries
      run: |
        # Install essential libraries
        sudo apt-get install -y \
          libc6-dev \
          libssl-dev \
          libcurl4-openssl-dev \
          zlib1g-dev \
          libpng-dev \
          libuv1-dev \
          libzip-dev \
          libglib2.0-dev

    - name: Install Qt6 base components
      run: |
        # Install Qt6 base packages
        sudo apt-get install -y \
          qt6-base-dev \
          qt6-base-dev-tools \
          qt6-tools-dev \
          qt6-tools-dev-tools \
          qt6-qpa-plugins \
          libqt6core5compat6-dev \
          libqt6svg6-dev

    - name: Install Qt6 WebEngine components
      run: |
        # Install Qt6 WebEngine packages
        sudo apt-get install -y \
          qt6-webengine-dev \
          qt6-webengine-dev-tools \
          libqt6webenginecore6 \
          libqt6webenginewidgets6 \
          libqt6webengine6-data

    - name: Install Qt6 QML components
      run: |
        # Install Qt6 QML and Quick packages
        sudo apt-get install -y \
          qt6-declarative-dev \
          qml6-module-qtquick-controls \
          qml6-module-qtquick-layouts \
          qml6-module-qtquick-window \
          qml6-module-qtquick-dialogs \
          qml6-module-qtwebengine

    - name: Install graphics libraries
      run: |
        # Install OpenGL and graphics libraries
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libegl1-mesa-dev \
          libgles2-mesa-dev \
          libdrm-dev \
          libxcomposite-dev \
          libxdamage-dev \
          libgbm-dev

    - name: Install X11 libraries
      run: |
        # Install X11 development libraries
        sudo apt-get install -y \
          libx11-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxi-dev \
          libxrandr-dev \
          libxtst6 \
          libxss1

    - name: Install audio and system libraries
      run: |
        # Install audio and other system libraries
        sudo apt-get install -y \
          libasound2-dev \
          libpulse-dev \
          libudev-dev \
          libevdev-dev \
          libnss3-dev \
          libgconf-2-4 \
          libgconf2-dev \
          libatspi2.0-dev

    - name: Setup i386 architecture
      run: |
        # Add i386 architecture for 32-bit support
        sudo dpkg --add-architecture i386
        sudo apt-get update

    - name: Install multilib compilers
      run: |
        # Install multilib compilers with retry logic and better error handling
        echo "Installing multilib compilers for x86_64 build..."
        for i in {1..3}; do
          echo "Attempt $i of 3..."
          if sudo apt-get install -y --fix-missing gcc-multilib g++-multilib; then
            echo "✓ Multilib compilers installed successfully"
            break
          fi
          echo "✗ Attempt $i failed"
          if [ $i -lt 3 ]; then
            echo "Cleaning package cache and retrying in 30 seconds..."
            sudo apt-get clean
            sudo apt-get update --fix-missing
            sleep 30
          else
            echo "❌ Failed to install multilib compilers after 3 attempts"
            exit 1
          fi
        done

    - name: Install 32-bit core libraries
      run: |
        # Install essential 32-bit libraries
        sudo apt-get install -y \
          libc6-dev:i386 \
          zlib1g-dev:i386 \
          libssl3:i386 \
          libcurl4:i386

    - name: Install 32-bit X11 libraries
      run: |
        # Install 32-bit X11 libraries
        sudo apt-get install -y \
          libx11-dev:i386 \
          libxcursor-dev:i386 \
          libxinerama-dev:i386 \
          libxi-dev:i386 \
          libxrandr-dev:i386

    - name: Install 32-bit audio libraries
      run: |
        # Install 32-bit audio libraries
        sudo apt-get install -y \
          libasound2-dev:i386 \
          libpulse-dev:i386 \
          libudev-dev:i386 \
          libevdev-dev:i386

    - name: Setup environment
      run: |
        echo "MAKE_JOBS=$(nproc)" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        # Add better library paths for x86_64
        echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV

    - name: Test dependencies
      run: |
        ./test-dependencies.sh

    - name: Build AppImage (Qt6)
      run: |
        ./build_appimage.sh -t x86_64 -o -j ${MAKE_JOBS} -q quirks-modern.sh

    - name: Upload AppImage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appimage-x86_64-qt6
        path: output/*.AppImage
        retention-days: 7

    - name: Upload zsync files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zsync-x86_64-qt6
        path: output/*.zsync
        retention-days: 7

  build-x86_64-qt5:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install base build dependencies
      run: |
        sudo apt-get update
        # Install core build tools first
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          curl \
          wget \
          file \
          ninja-build \
          clang \
          lld \
          pkg-config

    - name: Install core libraries
      run: |
        # Install essential libraries
        sudo apt-get install -y \
          libc6-dev \
          libssl-dev \
          libcurl4-openssl-dev \
          zlib1g-dev \
          libpng-dev \
          libuv1-dev \
          libzip-dev

    - name: Install Qt5 base components
      run: |
        # Install Qt5 base packages
        sudo apt-get install -y \
          qtbase5-dev \
          qtbase5-dev-tools \
          qttools5-dev \
          qttools5-dev-tools \
          qt5-qmake \
          libqt5svg5-dev

    - name: Install Qt5 WebEngine components
      run: |
        # Install Qt5 WebEngine packages
        sudo apt-get install -y \
          qtwebengine5-dev \
          qtwebengine5-dev-tools \
          libqt5webenginecore5 \
          libqt5webenginewidgets5

    - name: Install Qt5 QML components
      run: |
        # Install Qt5 QML and Quick packages
        sudo apt-get install -y \
          qtdeclarative5-dev \
          qml-module-qtquick-controls2 \
          qml-module-qtquick-layouts \
          qml-module-qtquick-window2 \
          qml-module-qtquick-dialogs \
          qml-module-qtwebengine

    - name: Install graphics and X11 libraries
      run: |
        # Install graphics and X11 libraries
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libegl1-mesa-dev \
          libgles2-mesa-dev \
          libx11-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxi-dev \
          libxrandr-dev \
          libxtst6 \
          libxss1

    - name: Install audio and system libraries
      run: |
        # Install audio and other system libraries
        sudo apt-get install -y \
          libasound2-dev \
          libpulse-dev \
          libudev-dev \
          libevdev-dev \
          libnss3-dev \
          libgconf-2-4 \
          libgconf2-dev

    - name: Setup i386 architecture
      run: |
        # Add i386 architecture for 32-bit support
        sudo dpkg --add-architecture i386
        sudo apt-get update

    - name: Install multilib compilers
      run: |
        # Install multilib compilers with retry logic and better error handling
        echo "Installing multilib compilers for x86_64-qt5 build..."
        for i in {1..3}; do
          echo "Attempt $i of 3..."
          if sudo apt-get install -y --fix-missing gcc-multilib g++-multilib; then
            echo "✓ Multilib compilers installed successfully"
            break
          fi
          echo "✗ Attempt $i failed"
          if [ $i -lt 3 ]; then
            echo "Cleaning package cache and retrying in 30 seconds..."
            sudo apt-get clean
            sudo apt-get update --fix-missing
            sleep 30
          else
            echo "❌ Failed to install multilib compilers after 3 attempts"
            exit 1
          fi
        done

    - name: Install 32-bit libraries
      run: |
        # Install 32-bit libraries
        sudo apt-get install -y \
          libc6-dev:i386 \
          zlib1g-dev:i386 \
          libx11-dev:i386 \
          libxcursor-dev:i386 \
          libxinerama-dev:i386 \
          libxi-dev:i386 \
          libxrandr-dev:i386 \
          libasound2-dev:i386 \
          libpulse-dev:i386 \
          libudev-dev:i386 \
          libevdev-dev:i386 \
          libssl3:i386 \
          libcurl4:i386

    - name: Setup environment
      run: |
        echo "MAKE_JOBS=$(nproc)" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV

    - name: Test dependencies
      run: |
        ./test-dependencies.sh

    - name: Build AppImage (Qt5)
      run: |
        ./build_appimage.sh -t x86_64 -j ${MAKE_JOBS} -q quirks-modern.sh

    - name: Upload AppImage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appimage-x86_64-qt5
        path: output/*.AppImage
        retention-days: 7

    - name: Upload zsync files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zsync-x86_64-qt5
        path: output/*.zsync
        retention-days: 7

  build-x86:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install base build dependencies
      run: |
        sudo apt-get update
        # Install core build tools first
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          curl \
          wget \
          file \
          ninja-build \
          clang \
          lld \
          pkg-config

    - name: Setup i386 architecture
      run: |
        # Add i386 architecture for 32-bit builds
        sudo dpkg --add-architecture i386
        sudo apt-get update

    - name: Install core 32-bit libraries
      run: |
        # Install essential 32-bit libraries
        sudo apt-get install -y \
          libc6-dev:i386 \
          libssl-dev:i386 \
          libcurl4-openssl-dev:i386 \
          zlib1g-dev:i386 \
          libpng-dev:i386 \
          libuv1-dev:i386 \
          libzip-dev:i386 \
          libglib2.0-dev:i386

    - name: Install Qt5 32-bit base components
      run: |
        # Install Qt5 base packages for i386 (Qt6 is not available for i386)
        sudo apt-get install -y \
          qtbase5-dev:i386 \
          qttools5-dev:i386 \
          qt5-qmake:i386 \
          libqt5svg5-dev:i386 || echo "Warning: Some Qt5 i386 packages may not be available"

    - name: Install 32-bit graphics libraries
      run: |
        # Install 32-bit graphics libraries
        sudo apt-get install -y \
          libgl1-mesa-dev:i386 \
          libegl1-mesa-dev:i386 \
          libgles2-mesa-dev:i386 \
          libdrm-dev:i386 \
          libxcomposite-dev:i386 \
          libxdamage-dev:i386 \
          libgbm-dev:i386

    - name: Install 32-bit X11 libraries
      run: |
        # Install 32-bit X11 development libraries
        sudo apt-get install -y \
          libx11-dev:i386 \
          libxcursor-dev:i386 \
          libxinerama-dev:i386 \
          libxi-dev:i386 \
          libxrandr-dev:i386 \
          libxtst6:i386 \
          libxss1:i386

    - name: Install 32-bit audio and system libraries
      run: |
        # Install 32-bit audio and other system libraries
        sudo apt-get install -y \
          libasound2-dev:i386 \
          libpulse-dev:i386 \
          libudev-dev:i386 \
          libevdev-dev:i386 \
          libnss3-dev:i386 \
          libgconf-2-4:i386 \
          libgconf2-dev:i386 \
          libatspi2.0-dev:i386

    - name: Install multilib compilers
      run: |
        # Install multilib compilers with retry logic and better error handling
        echo "Installing multilib compilers for x86 build..."
        for i in {1..3}; do
          echo "Attempt $i of 3..."
          if sudo apt-get install -y --fix-missing gcc-multilib g++-multilib; then
            echo "✓ Multilib compilers installed successfully"
            break
          fi
          echo "✗ Attempt $i failed"
          if [ $i -lt 3 ]; then
            echo "Cleaning package cache and retrying in 30 seconds..."
            sudo apt-get clean
            sudo apt-get update --fix-missing
            sleep 30
          else
            echo "❌ Failed to install multilib compilers after 3 attempts"
            exit 1
          fi
        done

    - name: Setup environment for 32-bit build
      run: |
        echo "MAKE_JOBS=$(nproc)" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        # Add i386 library paths
        echo "PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV
        echo "CMAKE_LIBRARY_PATH=/usr/lib/i386-linux-gnu:/usr/lib32" >> $GITHUB_ENV
        echo "CMAKE_INCLUDE_PATH=/usr/include/i386-linux-gnu" >> $GITHUB_ENV

    - name: Test dependencies
      run: |
        ./test-dependencies.sh

    - name: Build AppImage (x86)
      run: |
        ./build_appimage.sh -t x86 -j ${MAKE_JOBS} -q quirks-32.sh

    - name: Upload AppImage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appimage-x86-qt5
        path: output/*.AppImage
        retention-days: 7

    - name: Upload zsync files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zsync-x86-qt5
        path: output/*.zsync
        retention-days: 7